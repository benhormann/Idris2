name: Idris2

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
      - 'icons/**'
      - 'Release/**'
      - '**.md'
      - 'CONTRIBUTORS'
      - 'LICENSE'
      - '.github/workflows/ci-bootstrap.yml'
      - '.github/workflows/ci-lint.yml'
      - '.github/workflows/ci-sphinx.yml'
      - '.github/workflows/ci-super-linter.yml'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'icons/**'
      - 'Release/**'
      - '**.md'
      - 'CONTRIBUTORS'
      - 'LICENSE'
      - '.github/workflows/ci-bootstrap.yml'
      - '.github/workflows/ci-lint.yml'
      - '.github/workflows/ci-sphinx.yml'
      - '.github/workflows/ci-super-linter.yml'

env:
  PREVIOUS_VERSION: 0.5.1 # For previous-version build

jobs:

  initialise:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          # for pull_request so we can do HEAD^2
          fetch-depth: 2
      - name: Get commit message
        id: get_commit_message
        run: |
          if   [[ '${{ github.event_name }}' == 'push' ]]; then
            echo "::set-output name=commit_message::$(git log --format=%B -n 1 HEAD)"
          elif [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            echo "::set-output name=commit_message::$(git log --format=%B -n 1 HEAD^2)"
          fi
    outputs:
      commit_message:
        echo "${{ steps.get_commit_message.outputs.commit_message }}"

  ######################################################################
  # Build from the previous version
  # We perform this check before all the other ones because:
  # 1. It is fast
  # 2. If it fails then there is no point in trying the rest
  ######################################################################

  quick-check:
    needs: initialise
    runs-on: ubuntu-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci: skip]')
    env:
      IDRIS2_CG: chez
      SCHEME: scheme
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
      # Get our hands on the released version either by using the cache
      # or by rebuilding it if necessary.
      - name: Cache Chez Previous Version
        id: previous-version-cache
        uses: actions/cache@v2
        with:
          path: Idris2-${{ env.PREVIOUS_VERSION }}
          key: ${{ runner.os }}-idris2-bootstrapped-hirsute-chez-${{ env.PREVIOUS_VERSION }}
      - name : Build previous version
        if: steps.previous-version-cache.outputs.cache-hit != 'true'
        run: |
          wget "https://www.idris-lang.org/idris2-src/idris2-$PREVIOUS_VERSION.tgz"
          tar zxvf "idris2-$PREVIOUS_VERSION.tgz"
          cd "Idris2-$PREVIOUS_VERSION" && make bootstrap
      - name: Install previous version
        run: cd "Idris2-$PREVIOUS_VERSION" && make install
      # Build the current version and save the installation.
      - name: Build current version
        run: make && make install
      - name: Artifact Idris2 from previous version
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-installed-idris2-${{ env.PREVIOUS_VERSION }}-chez
          path: ~/.idris2/

  ######################################################################
  # Bootstrapping builds
  ######################################################################

  # CHEZ

  ubuntu-bootstrap-chez:
    needs: quick-check
    runs-on: ubuntu-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: ubuntu]')
      || contains(needs.initialise.outputs.commit_message, '[ci: chez]')
    env:
      IDRIS2_CG: chez
      SCHEME: scheme
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
      - name: Build from bootstrap
        run: make bootstrap && make install
      - name: Artifact Bootstrapped Idris2
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-installed-bootstrapped-idris2-chez
          path: ~/.idris2/

  macos-bootstrap-chez:
    needs: quick-check
    runs-on: macos-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: macos]')
      || contains(needs.initialise.outputs.commit_message, '[ci: chez]')
    env:
      SCHEME: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: brew install gmp chezscheme
      - name: Build Idris 2 from bootstrap
        run: make bootstrap && make install
      - name: Artifact Bootstrapped Idris2
        uses: actions/upload-artifact@v2
        with:
          name: macos-installed-bootstrapped-idris2-chez
          path: ~/.idris2/

  windows-bootstrap-chez:
    needs: quick-check
    runs-on: windows-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: windows]')
      || contains(needs.initialise.outputs.commit_message, '[ci: chez]')
      || contains(needs.initialise.outputs.commit_message, '[ci: racket]')
    defaults:
      run:
        shell: msys2 {0}
    env:
      SCHEME: scheme
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          path-type: inherit
          update: true
          install: git make mingw-w64-x86_64-gcc tar
      - name: Init
        shell: powershell
        run: git config --global core.autocrlf false
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Chez Scheme
        uses: actions/checkout@v2
        with:
          repository: 'cisco/ChezScheme'
          path: 'ChezScheme'
      - name: Configure and Build Chez Scheme
        run: cd ChezScheme && ./configure --threads && make
      - name: Set Path
        run: |
          cygpath -wa ChezScheme/ta6nt/bin/ta6nt >> $GITHUB_PATH
          echo "PREFIX=$(cygpath -ma .idris2)" >> $GITHUB_ENV
      - name: Test Scheme
        run: scheme --version
      - name: Bootstrap
        run: make bootstrap
      - name: Bootstrap test
        run: make test
      - name: Install
        run: make install
      - name: Artifact Idris2 from chez
        uses: actions/upload-artifact@v2
        with:
          name: windows-installed-bootstrapped-idris2-chez
          path: .idris2/

  nix-bootstrap-chez:
    needs: quick-check
    runs-on: ubuntu-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: nix]')
      || contains(needs.initialise.outputs.commit_message, '[ci: chez]')
    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20210126_f15f0b8/install
    - run: nix-build -A checks.x86_64-linux

  # RACKET

  ubuntu-bootstrap-racket:
    needs: quick-check
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: racket
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: sudo apt-get install -y racket
      - name: Build from bootstrap
        run: make bootstrap-racket && make install
      - name: Artifact Bootstrapped Idris2
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-installed-bootstrapped-idris2-racket
          path: ~/.idris2/

  macos-bootstrap-racket:
    needs: quick-check
    runs-on: macos-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: macos]')
      || contains(needs.initialise.outputs.commit_message, '[ci: racket]')
    env:
      IDRIS2_CG: racket
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          brew install gmp minimal-racket
          raco pkg install --auto compiler-lib r6rs-lib
      - name: Build Idris 2 from bootstrap
        run: make bootstrap-racket && make install
      - name: Artifact Bootstrapped Idris2
        uses: actions/upload-artifact@v2
        with:
          name: macos-installed-bootstrapped-idris2-racket
          path: ~/.idris2/


  ######################################################################
  # Self-hosting builds and testing
  ######################################################################

  # CHEZ

  ubuntu-self-host-chez:
    needs: ubuntu-bootstrap-chez
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
      SCHEME: scheme
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-installed-bootstrapped-idris2-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/"*
      - name: Build self-hosted
        run: make all IDRIS2FLAGS="-Werror"
      - name: Test self-hosted
        run: make test INTERACTIVE=

  macos-self-host-chez:
    needs: macos-bootstrap-chez
    runs-on: macos-latest
    env:
      SCHEME: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: macos-installed-bootstrapped-idris2-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          brew install gmp chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/"*
      - name: Build self-hosted
        run: make all IDRIS2FLAGS="-Werror"
      - name: Test self-hosted
        run: make test INTERACTIVE=

  # RACKET

  ubuntu-self-host-racket:
    needs: ubuntu-bootstrap-racket
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: racket
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-installed-bootstrapped-idris2-racket
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          sudo apt-get install -y racket
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/"*
      - name: Build self-hosted
        run: make all IDRIS2FLAGS="-Werror"
      - name: Test self-hosted
        run: make test INTERACTIVE=

  ubuntu-self-host-previous-version:
    needs: quick-check
    runs-on: ubuntu-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: ubuntu]')
      || contains(needs.initialise.outputs.commit_message, '[ci: libs]')
    env:
      IDRIS2_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-installed-idris2-${{ env.PREVIOUS_VERSION }}-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/"*
      - name: Build self-hosted from previous version
        run: make all IDRIS2FLAGS="-Werror" && make install
      - name: Test self-hosted from previous version
        run: make test INTERACTIVE=
      - name: Artifact Idris2
        uses: actions/upload-artifact@v2
        with:
          name: idris2-nightly-chez
          path: ~/.idris2/

  macos-self-host-racket:
    needs: macos-bootstrap-racket
    runs-on: macos-latest
    env:
      IDRIS2_CG: racket
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: macos-installed-bootstrapped-idris2-racket
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          brew install gmp minimal-racket
          raco pkg install --auto compiler-lib r6rs-lib
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/"*
      - name: Build self-hosted
        run: make all IDRIS2FLAGS="-Werror"
      - name: Test self-hosted
        run: make test INTERACTIVE=

  windows-self-host-racket:
    needs: windows-bootstrap-chez
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    env:
      IDRIS2_CG: racket
      SCHEME: scheme
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          path-type: inherit
          update: true
          install: git make mingw-w64-x86_64-gcc tar
      - name: Init
        shell: powershell
        run: git config --global core.autocrlf false
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Chez Scheme
        uses: actions/checkout@v2
        with:
          repository: 'cisco/ChezScheme'
          path: 'ChezScheme'
      - name: Configure and Build Chez Scheme
        run: cd ChezScheme && ./configure --threads && make
      - name: Set Path
        run: |
          cygpath -wa ChezScheme/ta6nt/bin/ta6nt >> $GITHUB_PATH
          cygpath -wa .idris2/bin >> $GITHUB_PATH
          echo "PREFIX=$(cygpath -ma .idris2)" >> $GITHUB_ENV
      - name: Test Scheme
        run: scheme --version
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: windows-installed-bootstrapped-idris2-chez
          path: .idris2/
      - name: Install build dependencies
        uses: Bogdanp/setup-racket@v1.4
        with:
          variant: 'CS'
          version: 'stable'
          distribution: 'full'
      - name: Self host
        run: make
      - name: Test
        run: make test

  ######################################################################
  # Ubuntu API
  ######################################################################

  ubuntu-build-api:
    needs: ubuntu-bootstrap-chez
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-installed-bootstrapped-idris2-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/"*
      - name: Build API
        run: make install-api
      - name: Test API
        run: cd tests/idris2/api001 && ./run idris2

  ######################################################################
  # Ubuntu testing some libraries.
  # We are particularly interested in libraries that are heavily using
  # dependent types, that are prone to find bugs and regressions in the
  # compiler.
  ######################################################################

  ubuntu-test-collie:
    needs: ubuntu-self-host-previous-version
    runs-on: ubuntu-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: libs]')
    env:
      IDRIS2_CG: chez
    steps:
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: idris2-nightly-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/libidris2_support.so"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'ohad/collie'
      - name: Build Collie
        run: make

  ubuntu-test-frex:
    needs: ubuntu-self-host-previous-version
    runs-on: ubuntu-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: libs]')
    env:
      IDRIS2_CG: chez
    steps:
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: idris2-nightly-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" "$HOME/.idris2/bin/idris2_app/libidris2_support.so"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'frex-project/idris-frex'
      - name: Build Frex
        run: make && make test

  ubuntu-test-elab:
    needs: ubuntu-self-host-previous-version
    runs-on: ubuntu-latest
    if: |
      !contains(needs.initialise.outputs.commit_message, '[ci:')
      || contains(needs.initialise.outputs.commit_message, '[ci: libs]')
    env:
      IDRIS2_CG: chez
    steps:
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: idris2-nightly-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          echo "deb http://security.ubuntu.com/ubuntu hirsute universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y -t hirsute chezscheme
          echo "$HOME/.idris2/bin" >> "$GITHUB_PATH"
          chmod +x "$HOME/.idris2/bin/idris2" #"$HOME/.idris2/bin/idris2_app/libidris2_support.so"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'stefan-hoeck/idris2-elab-util'
      - name: Build idris2-elab-util
        run: make all
