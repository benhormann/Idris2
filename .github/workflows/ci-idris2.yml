name: Idris2

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
      - 'icons/**'
      - 'Release/**'
      - '*.md'
      - 'CONTRIBUTORS'
      - 'LICENSE'
      - '.github/workflows/ci-bootstrap.yml'
      - '.github/workflows/ci-lint.yml'
      - '.github/workflows/ci-sphinx.yml'
      - '.github/workflows/ci-super-linter.yml'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'icons/**'
      - 'Release/**'
      - '*.md'
      - 'CONTRIBUTORS'
      - 'LICENSE'
      - '.github/workflows/ci-bootstrap.yml'
      - '.github/workflows/ci-lint.yml'
      - '.github/workflows/ci-sphinx.yml'
      - '.github/workflows/ci-super-linter.yml'

jobs:

  windows-bootstrap-chez:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    env:
      SCHEME: scheme
    steps:
      - name: Init
        shell: powershell
        run: |
          git config --global core.autocrlf false
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          path-type: inherit
          update: true
          install: curl git make mingw-w64-x86_64-gcc
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download and extract Chez Scheme
        run: |
          echo "PATH=$PATH"
          echo "PWD=$PWD"
          find "$(cygpath -u "${WIX}")" -name dark.exe || echo "dark.exe not found"
          tag=$(curl -Is https://github.com/cisco/ChezScheme/releases/latest | awk -F/ '/^[Ll]ocation:/ {print $NF}')
          ver=${tag#v}
          echo "tag=$tag ver=$ver"
          curl -LO https://github.com/cisco/ChezScheme/releases/download/$tag/ChezScheme$ver.exe
          dark=$(cygpath -u "${WIX%\\}")/bin/dark.exe
          echo "Extracting with dark.exe"
          "$dark" -x extracted ChezScheme$ver.exe
          echo "Extracting with msiexec"
          msiexec /a extracted/AttachedContainer/ChezScheme64.msi TARGETDIR="$PWD" /qn
          printf "find: "
          find . -name scheme.exe || echo "Not found"
          echo "Test scheme.exe"
          "./Chez Scheme $ver/bin/ta6nt/scheme.exe" --version
          rm -rf extracted
          echo "$(cygpath -w "$PWD")\\Chez Scheme $ver\\bin\\ta6nt" >> $GITHUB_PATH
      - name: Set Path
        run: |
          idris="$(cygpath -w "$PWD")\\.idris2"
          echo "$idris\\bin" >> $GITHUB_PATH
          echo "IDRIS_PREFIX=$idris" >> $GITHUB_ENV
          echo "PREFIX=$idris" >> $GITHUB_ENV
      - name: Test Scheme
        run: |
          echo "PATH=$PATH"
          scheme --version || scheme.exe --version
      - name: Bootstrap
        run: make bootstrap
      - name: Bootstrap test
        run: make bootstrap-test
      - name: Install
        run: make install
      #- name: Artifact Idris2 from chez
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: windows-installed-bootstrapped-idris2-chez
      #    path: ${{ env.IDRIS_PREFIX }}

  msys2-ucrt-bootstrap-chez:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    env:
      SCHEME: scheme
    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: git make mingw-w64-ucrt-x86_64-gcc
      - name: Init
        shell: powershell
        run: |
          git config --global core.autocrlf false
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Chez Scheme
        uses: actions/checkout@v2
        with:
          repository: 'cisco/ChezScheme'
          path: 'ChezScheme'
      - name: Configure and Build Chez Scheme
        run: |
          echo "PATH=$PATH"
          echo "PWD=$PWD"
          cd ChezScheme && ./configure --threads && make
      - name: Set Path
        run: |
          chez=$(cygpath -w "$PWD")\\ChezScheme\\ta6nt\\bin\\ta6nt
          idris=$(cygpath -w "$PWD")\\.idris2
          echo "$chez" >> $GITHUB_PATH
          echo "$idris\\bin" >> $GITHUB_PATH
          echo "IDRIS_PREFIX=$idris" >> $GITHUB_ENV
          echo "PREFIX=$idris" >> $GITHUB_ENV
      - name: Test Scheme
        run: |
          echo "PATH=$PATH"
          scheme --version || scheme.exe --version
      - name: Bootstrap
        run: make bootstrap
      - name: Bootstrap test
        run: make bootstrap-test
      - name: Install
        run: make install
      #- name: Artifact Idris2 from chez
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: windows-installed-bootstrapped-idris2-chez
      #    path: ${{ env.IDRIS_PREFIX }}
